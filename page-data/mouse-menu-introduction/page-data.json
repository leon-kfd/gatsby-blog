{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/mouse-menu-introduction/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Howdy"}},"markdownRemark":{"id":"7925b07b-77e8-55cf-b3dd-038cd5af16ca","excerpt":"使用Vue3实现自定义鼠标右键菜单，支持二级菜单、自定义样式、回调函数等功能，同时提供封装成Vue指令调用。 🚀初步构思 仅用Vue构建右键菜单UI组件，需利用组件提供show…","html":"<p>使用Vue3实现自定义鼠标右键菜单，支持二级菜单、自定义样式、回调函数等功能，同时提供封装成Vue指令调用。</p>\n<h2 id=\"初步构思\" style=\"position:relative;\"><a href=\"#%E5%88%9D%E6%AD%A5%E6%9E%84%E6%80%9D\" aria-label=\"初步构思 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚀初步构思</h2>\n<ul>\n<li>仅用Vue构建右键菜单UI组件，需利用组件提供show方法唤起菜单，在指令中再封装对右键菜单事件的处理</li>\n<li>接收一个菜单项数组配置，菜单项中提供点击菜单后回调函数，可以自定义传入回调函数的参数</li>\n<li>将菜单DOM中的样式尽量抽离出可配置，并利用CSS变量注入，可自定义菜单的样式</li>\n<li>提供<code class=\"language-text\">show</code>方法接收<code class=\"language-text\">x,y</code>定位参数，然后显示菜单，同时要加入检查窗口碰撞后的处理</li>\n<li>由于右键菜单的特殊性，可封装组件为单实例，页面上只会存在一个菜单实例，可优化性能</li>\n</ul>\n<h2 id=\"功能说明\" style=\"position:relative;\"><a href=\"#%E5%8A%9F%E8%83%BD%E8%AF%B4%E6%98%8E\" aria-label=\"功能说明 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌈功能说明</h2>\n<h3 id=\"菜单项列表-menulist\" style=\"position:relative;\"><a href=\"#%E8%8F%9C%E5%8D%95%E9%A1%B9%E5%88%97%E8%A1%A8-menulist\" aria-label=\"菜单项列表 menulist permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>菜单项列表-menuList</h3>\n<p><code class=\"language-text\">menuList</code>作为必传参数，用于渲染出菜单项，接收一个长度至少为1的数组，同时可以指定<code class=\"language-text\">children</code>属性用于渲染二级菜单。</p>\n<p>菜单项中的配置尽量做成同时接收函数的方式，以便可以通过传入的参数更快动态配置出不同的菜单。</p>\n<p>当前支持以下菜单项配置:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">说明</th>\n<th align=\"left\">类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">fn</td>\n<td align=\"left\">点击菜单后执行的回调,回调参数1为用户传入的params, 参数2为点击右键时所在的HtmlElement元素（使用document.elementFromPoint获取）, 参数3为指令绑定的当前元素</td>\n<td align=\"left\"><code class=\"language-text\">(params, activeEl, bindingEl) => void</code></td>\n</tr>\n<tr>\n<td align=\"left\">label</td>\n<td align=\"left\">菜单名, 可使用函数，回调参数同fn选项</td>\n<td align=\"left\">String, Function</td>\n</tr>\n<tr>\n<td align=\"left\">tips</td>\n<td align=\"left\">菜单辅助文本（处于右侧的文本），可使用函数，回调参数同fn选项</td>\n<td align=\"left\">String, Function</td>\n</tr>\n<tr>\n<td align=\"left\">icon</td>\n<td align=\"left\">菜单图标的类名（字体图标)</td>\n<td align=\"left\">String</td>\n</tr>\n<tr>\n<td align=\"left\">hidden</td>\n<td align=\"left\">菜单项是否隐藏，可使用函数，回调参数同fn选项</td>\n<td align=\"left\">Boolean, Function</td>\n</tr>\n<tr>\n<td align=\"left\">disabled</td>\n<td align=\"left\">菜单项是否不可点击，可使用函数，回调参数同fn选项</td>\n<td align=\"left\">Boolean, Function</td>\n</tr>\n<tr>\n<td align=\"left\">children</td>\n<td align=\"left\">子菜单的菜单项数组（配置与此表一致，但目前仅支持二级菜单）</td>\n<td align=\"left\">Array</td>\n</tr>\n<tr>\n<td align=\"left\">line</td>\n<td align=\"left\">是否为分割线,该值为True时,以上设置均失效</td>\n<td align=\"left\">Boolean</td>\n</tr>\n</tbody>\n</table>\n<p>菜单在每次打开时都会调用以下方法去格式化出最终的菜单项:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> formatterFnOption <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>list<span class=\"token operator\">:</span> MenuSetting<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> clickDomEl<span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">,</span> el<span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">,</span> params<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> MenuSetting<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>item <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 对子菜单进行递归处理</span>\n      item<span class=\"token punctuation\">.</span>children <span class=\"token operator\">=</span> <span class=\"token function\">formatterFnOption</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">,</span> clickDomEl<span class=\"token punctuation\">,</span> el<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isFunction</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      item<span class=\"token punctuation\">.</span>label <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span><span class=\"token function\">label</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span> clickDomEl<span class=\"token punctuation\">,</span> el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isFunction</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>tips<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      item<span class=\"token punctuation\">.</span>tips <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span><span class=\"token function\">tips</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span> clickDomEl<span class=\"token punctuation\">,</span> el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isFunction</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>hidden<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      item<span class=\"token punctuation\">.</span>hidden <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span><span class=\"token function\">hidden</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span> clickDomEl<span class=\"token punctuation\">,</span> el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isFunction</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>disabled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      item<span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span><span class=\"token function\">disabled</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span> clickDomEl<span class=\"token punctuation\">,</span> el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>Example: <a href=\"https://leon-kfd.github.io/howdyjs/#/mouse-menu/example1\">基础菜单</a></li>\n</ul>\n<h3 id=\"窗口碰撞处理\" style=\"position:relative;\"><a href=\"#%E7%AA%97%E5%8F%A3%E7%A2%B0%E6%92%9E%E5%A4%84%E7%90%86\" aria-label=\"窗口碰撞处理 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>窗口碰撞处理</h3>\n<p>菜单弹出时根据传入的坐标当作左上角定位，此时需要检测它是否碰撞到了窗口，当传入坐标加上菜单宽度或高度超出了窗口最大宽高时要进行调整。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">show</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...some other code</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">nextTick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 以下代码检测是否碰撞到了窗口</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> innerWidth<span class=\"token operator\">:</span> windowWidth<span class=\"token punctuation\">,</span> innerHeight<span class=\"token operator\">:</span> windowHeight <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> window<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> menu <span class=\"token operator\">=</span> MenuWrapper<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> menuHeight <span class=\"token operator\">=</span> menu<span class=\"token punctuation\">.</span>offsetHeight<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> menuWidth <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>menuWidth <span class=\"token operator\">||</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n  menuLeft<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> menuWidth <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">></span> windowWidth <span class=\"token operator\">?</span> windowWidth <span class=\"token operator\">-</span> menuWidth <span class=\"token operator\">-</span> <span class=\"token number\">5</span> <span class=\"token operator\">:</span> x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  menuTop<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> menuHeight <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">></span> windowHeight <span class=\"token operator\">?</span> windowHeight <span class=\"token operator\">-</span> menuHeight <span class=\"token operator\">-</span> <span class=\"token number\">5</span> <span class=\"token operator\">:</span> y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>因为二级菜单是悬停后才出现的，所以二级菜单的碰撞检测需同样额外去处理。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleMenuMouseEnter</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>$event<span class=\"token operator\">:</span> MouseEvent<span class=\"token punctuation\">,</span> item<span class=\"token operator\">:</span> MenuSetting<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>children <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>item<span class=\"token punctuation\">.</span>disabled<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    hoverFlag<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> el <span class=\"token operator\">=</span> $event<span class=\"token punctuation\">.</span>currentTarget <span class=\"token keyword\">as</span> HTMLElement<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>el<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> offsetWidth <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> el<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> subEl <span class=\"token operator\">=</span> el<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.__menu__sub__wrapper'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> HTMLElement<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>subEl<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 以下代码检测是否碰撞到了窗口</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> offsetWidth<span class=\"token operator\">:</span> subOffsetWidth<span class=\"token punctuation\">,</span> offsetHeight<span class=\"token operator\">:</span> subOffsetHeight <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> subEl<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> innerWidth<span class=\"token operator\">:</span> windowWidth<span class=\"token punctuation\">,</span> innerHeight<span class=\"token operator\">:</span> windowHeight <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> window<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> top<span class=\"token punctuation\">,</span> left <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> el<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">+</span> offsetWidth <span class=\"token operator\">+</span> subOffsetWidth <span class=\"token operator\">></span> windowWidth <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      subLeft<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> left <span class=\"token operator\">-</span> subOffsetWidth <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      subLeft<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> left <span class=\"token operator\">+</span> offsetWidth<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>top <span class=\"token operator\">+</span> subOffsetHeight <span class=\"token operator\">></span> windowHeight <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      subTop<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> windowHeight <span class=\"token operator\">-</span> subOffsetHeight<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      subTop<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> top <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>Example: <a href=\"https://leon-kfd.github.io/howdyjs/#/mouse-menu/example2\">二级菜单</a></li>\n</ul>\n<p><img src=\"https://s2.loli.net/2021/12/04/aPpE2L96XRtZiMF.png\" alt=\"二级菜单\"></p>\n<h3 id=\"自定义样式\" style=\"position:relative;\"><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%B7%E5%BC%8F\" aria-label=\"自定义样式 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自定义样式</h3>\n<p>菜单样式通过CSS3变量控制，通过<code class=\"language-text\">menuWrapperCss</code>和<code class=\"language-text\">menuItemCss</code>两个Props传入修改CSS变量。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">let</span> el <span class=\"token operator\">=</span> MenuWrapper<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>menuWrapperCss<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>menuWrapperCss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>item <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    el<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">--menu-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">.</span>menuWrapperCss <span class=\"token operator\">&amp;&amp;</span> props<span class=\"token punctuation\">.</span>menuWrapperCss<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>menuItemCss<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>menuItemCss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>item <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    el<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">--menu-item-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">.</span>menuItemCss <span class=\"token operator\">&amp;&amp;</span> props<span class=\"token punctuation\">.</span>menuItemCss<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>支持的样式如下:</p>\n<details>\n<summary><b>menuWrapperCss-菜单容器CSS设置（点击展开查看）</b></summary>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">说明</th>\n<th align=\"left\">类型</th>\n<th align=\"left\">默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">background</td>\n<td align=\"left\">菜单容器背景色</td>\n<td align=\"left\">String</td>\n<td align=\"left\">#c8f2f0</td>\n</tr>\n<tr>\n<td align=\"left\">boxShadow</td>\n<td align=\"left\">菜单容器阴影</td>\n<td align=\"left\">String</td>\n<td align=\"left\">0 1px 5px #888</td>\n</tr>\n<tr>\n<td align=\"left\">padding</td>\n<td align=\"left\">默认padding</td>\n<td align=\"left\">String</td>\n<td align=\"left\">5px 0</td>\n</tr>\n<tr>\n<td align=\"left\">borderRadius</td>\n<td align=\"left\">圆角</td>\n<td align=\"left\">String</td>\n<td align=\"left\">4px</td>\n</tr>\n<tr>\n<td align=\"left\">lineColor</td>\n<td align=\"left\">分割线颜色</td>\n<td align=\"left\">String</td>\n<td align=\"left\">#ccc</td>\n</tr>\n<tr>\n<td align=\"left\">lineMargin</td>\n<td align=\"left\">分割线Margin</td>\n<td align=\"left\">String</td>\n<td align=\"left\">5px 0</td>\n</tr>\n</tbody>\n</table>\n</details>\n<hr>\n<details>\n<summary><b>menuItemCss-菜单项CSS设置（点击展开查看）</b></summary>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">说明</th>\n<th align=\"left\">类型</th>\n<th align=\"left\">默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">height</td>\n<td align=\"left\">每项高度</td>\n<td align=\"left\">String</td>\n<td align=\"left\">30px</td>\n</tr>\n<tr>\n<td align=\"left\">padding</td>\n<td align=\"left\">-</td>\n<td align=\"left\">String</td>\n<td align=\"left\">0 10px</td>\n</tr>\n<tr>\n<td align=\"left\">iconSize</td>\n<td align=\"left\">图标大小</td>\n<td align=\"left\">String</td>\n<td align=\"left\">20px</td>\n</tr>\n<tr>\n<td align=\"left\">iconFontSize</td>\n<td align=\"left\">字体图标字体大小(设置类型为字体图标时可用)</td>\n<td align=\"left\">String</td>\n<td align=\"left\">-</td>\n</tr>\n<tr>\n<td align=\"left\">iconColor</td>\n<td align=\"left\">字体图标颜色</td>\n<td align=\"left\">String</td>\n<td align=\"left\">#484852</td>\n</tr>\n<tr>\n<td align=\"left\">labelColor</td>\n<td align=\"left\">菜单项标题颜色</td>\n<td align=\"left\">String</td>\n<td align=\"left\">#484852</td>\n</tr>\n<tr>\n<td align=\"left\">labelFontSize</td>\n<td align=\"left\">菜单项标题字体大小</td>\n<td align=\"left\">String</td>\n<td align=\"left\">14px</td>\n</tr>\n<tr>\n<td align=\"left\">tipsColor</td>\n<td align=\"left\">菜单辅助文字颜色</td>\n<td align=\"left\">String</td>\n<td align=\"left\">#889</td>\n</tr>\n<tr>\n<td align=\"left\">tipsFontSize</td>\n<td align=\"left\">菜单辅助文字字体大小</td>\n<td align=\"left\">String</td>\n<td align=\"left\">12px</td>\n</tr>\n<tr>\n<td align=\"left\">arrowColor</td>\n<td align=\"left\">指示箭头颜色（出现子菜单时生成）</td>\n<td align=\"left\">String</td>\n<td align=\"left\">#484852</td>\n</tr>\n<tr>\n<td align=\"left\">arrowSize</td>\n<td align=\"left\">指示箭头大小（指示箭头为使用border生成的三角形)</td>\n<td align=\"left\">String</td>\n<td align=\"left\">10px</td>\n</tr>\n<tr>\n<td align=\"left\">disabledColor</td>\n<td align=\"left\">菜单禁用状态时的颜色</td>\n<td align=\"left\">String</td>\n<td align=\"left\">#bcc</td>\n</tr>\n<tr>\n<td align=\"left\">hoverBackground</td>\n<td align=\"left\">hover时菜单项的背景色</td>\n<td align=\"left\">String</td>\n<td align=\"left\">rgba(255,255,255,.8)</td>\n</tr>\n<tr>\n<td align=\"left\">hoverLabelColor</td>\n<td align=\"left\">hover时菜单项label的颜色</td>\n<td align=\"left\">String</td>\n<td align=\"left\">null</td>\n</tr>\n<tr>\n<td align=\"left\">hoverTipsColor</td>\n<td align=\"left\">hover时菜单项tips的颜色</td>\n<td align=\"left\">String</td>\n<td align=\"left\">null</td>\n</tr>\n<tr>\n<td align=\"left\">hoverArrowColor</td>\n<td align=\"left\">hover时菜单项arrow的颜色</td>\n<td align=\"left\">String</td>\n<td align=\"left\">null</td>\n</tr>\n</tbody>\n</table>\n</details>\n<hr>\n<ul>\n<li>Example: <a href=\"https://leon-kfd.github.io/howdyjs/#/mouse-menu/example4\">自定义样式</a></li>\n</ul>\n<blockquote>\n<p>对于不支持CSS变量的浏览器也可以选择覆盖CSS类名实现</p>\n</blockquote>\n<h2 id=\"封装成函数调用\" style=\"position:relative;\"><a href=\"#%E5%B0%81%E8%A3%85%E6%88%90%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8\" aria-label=\"封装成函数调用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚡封装成函数调用</h2>\n<p>当前只是用Vue构建了菜单组件，但并不推荐直接使用组件方式引用。为了方便使用将其封装出一个函数，在需要使用时再调用函数，这种类似<code class=\"language-text\">ElementUI</code>的<code class=\"language-text\">MessageBox</code>的调用方式。同时函数调用方式可确保页面上只会存在一个菜单实例，可优化性能。</p>\n<blockquote>\n<p>函数调用方式必须在options中传入el（绑定唤起菜单的Dom元素）。</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">CustomMouseMenu</span> <span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> CustomMouseMenuOptions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> className <span class=\"token operator\">=</span> <span class=\"token string\">'__mouse__menu__container'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> container<span class=\"token operator\">:</span>HTMLElement<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>className<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>className<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> HTMLElement<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    container <span class=\"token operator\">=</span> <span class=\"token function\">createClassDom</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> vm <span class=\"token operator\">=</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span>MouseMenu<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> vm<span class=\"token punctuation\">.</span>component<span class=\"token operator\">?.</span>proxy <span class=\"token keyword\">as</span> ComponentPublicInstance<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> MouseMenu<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Example: <a href=\"https://codepen.io/leon-kfd/pen/GRWBGrM\">CustomMouseMenu函数调用方式</a></li>\n</ul>\n<h2 id=\"封装成vue3指令方式调用\" style=\"position:relative;\"><a href=\"#%E5%B0%81%E8%A3%85%E6%88%90vue3%E6%8C%87%E4%BB%A4%E6%96%B9%E5%BC%8F%E8%B0%83%E7%94%A8\" aria-label=\"封装成vue3指令方式调用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔥封装成Vue3指令方式调用</h2>\n<p>因为使用指令可以提前知道菜单要绑定到哪个Dom元素中，把右键及contextmenu事件的处理封装在vue指令中，使用Vue指令可以更方便的调出菜单。Vue指令也是本插件最推荐的方法。</p>\n<p>因为移动端下的contextmenu行为不一致，我们可以采用长按事件代替。在指令封装中，同时做了PC端右键唤起与移动端长按唤起菜单的处理。</p>\n<p>指令实现原理主要是利用传入的参数与绑定的Dom等参数，封装用户的右键与长按事件并利用<code class=\"language-text\">CustomMouseMenu</code>函数唤出菜单。</p>\n<p><a href=\"https://github.com/leon-kfd/howdyjs/blob/master/packages/mouse-menu/index.ts\">查看源码</a></p>\n<p>指令方式使用如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">v-mouse-menu</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>options<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Dom<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> MouseMenuDirective <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@howdyjs/mouse-menu'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">directive</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">MouseMenu</span><span class=\"token operator\">:</span> MouseMenuDirective\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// Some Options</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><strong>备注说明</strong></p>\n<p>为了性能，指令封装模式默认只对mounted钩子进行挂载。<br>\n当使用场景中有params参数传入菜单函数，有可能需要在组件更新时更新菜单，这时可以同时把update也挂载上。可参考以下写法:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> MouseMenuDirective <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@howdyjs/mouse-menu'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">directive</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">MouseMenu</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span>MouseMenuDirective<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">updated</span><span class=\"token operator\">:</span> MouseMenuDirective<span class=\"token punctuation\">.</span>mounted\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"elementplus-table中使用右键菜单\" style=\"position:relative;\"><a href=\"#elementplus-table%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95\" aria-label=\"elementplus table中使用右键菜单 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌟ElementPlus table中使用右键菜单</h2>\n<p>比较常用的一个场景是在表格中右键列表项弹出菜单，并通过列表项数据显示不同的菜单。以下提供一个Vue指令方式操作原生表格的Example:</p>\n<ul>\n<li>Example: <a href=\"https://leon-kfd.github.io/howdyjs/#/mouse-menu/example6\">指令方式绑定到原生表格</a></li>\n</ul>\n<p>由于<code class=\"language-text\">ElementPlus</code>UI库中的<code class=\"language-text\">el-table</code>提供了<a href=\"https://element-plus.gitee.io/#/zh-CN/component/table#table-events\">row-contextmenu</a>方法，这样可以很方便的让我们的右键菜单扩展到el-table中。</p>\n<p>只要对<code class=\"language-text\">row-contextmenu</code>方法进行处理，就可以在el-table中实现右键弹出菜单功能。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token function\">showMouseMenu</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> column<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> event\n  <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> <span class=\"token function\">CustomMouseMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    el<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">,</span>\n    params<span class=\"token operator\">:</span> row<span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>menuOptions\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Example in <code class=\"language-text\">ElementPlusTable</code>: <a href=\"https://codepen.io/leon-kfd/pen/yLMKPOP\" target=\"_blank\">Demo</a></li>\n</ul>\n<p><img src=\"https://s2.loli.net/2021/12/04/FYVwsc24dCEiSPH.gif\" alt=\"element-plus-table-mouse-menu.gif\"></p>\n<h2 id=\"其他说明\" style=\"position:relative;\"><a href=\"#%E5%85%B6%E4%BB%96%E8%AF%B4%E6%98%8E\" aria-label=\"其他说明 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✨其他说明</h2>\n<p>插件还支持其他配置，例如菜单图标，禁用模式等。</p>\n<p>配置参数（Props/指令Value）：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">说明</th>\n<th align=\"left\">类型</th>\n<th align=\"left\">默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">el</td>\n<td align=\"left\">触发的Dom元素（以Vue组件方式或CustomMenu函数方式使用时必须传入）</td>\n<td align=\"left\">-</td>\n<td align=\"left\">-</td>\n</tr>\n<tr>\n<td align=\"left\">menuWidth</td>\n<td align=\"left\">菜单宽度</td>\n<td align=\"left\">Number</td>\n<td align=\"left\">200</td>\n</tr>\n<tr>\n<td align=\"left\">menuList</td>\n<td align=\"left\">生成菜单项的数组，具体配置参考下表</td>\n<td align=\"left\">Array</td>\n<td align=\"left\">-</td>\n</tr>\n<tr>\n<td align=\"left\">hasIcon</td>\n<td align=\"left\">是否有菜单图标</td>\n<td align=\"left\">Boolean</td>\n<td align=\"left\">false</td>\n</tr>\n<tr>\n<td align=\"left\">iconType</td>\n<td align=\"left\">菜单图标的类型(目前仅支持字体图标)</td>\n<td align=\"left\">String</td>\n<td align=\"left\">font-icon</td>\n</tr>\n<tr>\n<td align=\"left\">menuWrapperCss</td>\n<td align=\"left\">菜单容器的CSS设置，具体配置参考下表</td>\n<td align=\"left\">Object</td>\n<td align=\"left\">-</td>\n</tr>\n<tr>\n<td align=\"left\">menuItemCss</td>\n<td align=\"left\">菜单项的CSS设置，具体配置参考下表</td>\n<td align=\"left\">Object</td>\n<td align=\"left\">-</td>\n</tr>\n<tr>\n<td align=\"left\">params</td>\n<td align=\"left\">传给处理函数的自定义参数，会注入到下方各回调函数的首个参数中</td>\n<td align=\"left\">any</td>\n<td align=\"left\">-</td>\n</tr>\n<tr>\n<td align=\"left\">appendToBody</td>\n<td align=\"left\">容器是否挂载到body上</td>\n<td align=\"left\">Boolean</td>\n<td align=\"left\">true</td>\n</tr>\n<tr>\n<td align=\"left\">disabled</td>\n<td align=\"left\">是否禁用整个菜单，接收一个函数</td>\n<td align=\"left\">(params: any) => boolean</td>\n<td align=\"left\">-</td>\n</tr>\n<tr>\n<td align=\"left\">useLongPressInMobile</td>\n<td align=\"left\">移动端下兼容使用长按事件唤出菜单, 但长按模式不支持多级菜单（仅支持指令方式）</td>\n<td align=\"left\">Boolean</td>\n<td align=\"left\">false</td>\n</tr>\n<tr>\n<td align=\"left\">longPressDuration</td>\n<td align=\"left\">长按事件需持续时间,单位ms</td>\n<td align=\"left\">Number</td>\n<td align=\"left\">500</td>\n</tr>\n<tr>\n<td align=\"left\">injectCloseListener</td>\n<td align=\"left\">自动注入关闭菜单的Listener，设为false时需自行处理</td>\n<td align=\"left\">Boolean</td>\n<td align=\"left\">true</td>\n</tr>\n</tbody>\n</table>\n<p><em>该插件收录在<a href=\"https://github.com/leon-kfd/howdyjs\">howdyjs</a>中，为其一个分包，欢迎start</em></p>\n<h2 id=\"links\" style=\"position:relative;\"><a href=\"#links\" aria-label=\"links permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔗Links</h2>\n<ul>\n<li><a href=\"https://github.com/leon-kfd/howdyjs/tree/master/packages/mouse-menu\">Github</a></li>\n<li><a href=\"https://leon-kfd.github.io/howdyjs/#/mouse-menu/readme\">Demo</a></li>\n</ul>","frontmatter":{"title":"Vue3实现自定义右键菜单","date":"June 07, 2021","description":"使用Vue3实现自定义鼠标右键菜单，支持二级菜单、自定义样式、回调函数等功能，同时提供封装成Vue指令调用。"}}},"pageContext":{"slug":"/mouse-menu-introduction/","previous":{"fields":{"slug":"/design-of-dashboard/"},"frontmatter":{"title":"Dashboard自定义面板项目介绍"}},"next":{"fields":{"slug":"/g-music-visualizer/"},"frontmatter":{"title":"利用G渲染器实现的音频可视化方案"}}}},
    "staticQueryHashes": ["143701507","165057280"]}