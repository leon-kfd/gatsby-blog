{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/design-of-exam-system/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Howdy"}},"markdownRemark":{"id":"ab2452e0-8228-597d-83b5-6fd708223791","excerpt":"该系统成品已部署与线上，在线访问：ExamSystem 系统线上环境部分功能已锁定 学生端登录 测试账号1: user1  密码: 7gzt9i0lkh 测试账号2: user2  密码: lyufmklxy 教师端登录 测试账号: admin1  密码: qrmeke4p7…","html":"<ul>\n<li>该系统成品已部署与线上，在线访问：<a href=\"https://kongfandong.cn/exam/index.html\" target=\"_blank\">ExamSystem</a></li>\n<li>系统线上环境部分功能已锁定</li>\n<li>学生端登录\n<ul>\n<li>测试账号1: user1  密码: 7gzt9i0lkh</li>\n<li>测试账号2: user2  密码: lyufmklxy</li>\n</ul>\n</li>\n<li>教师端登录\n<ul>\n<li>测试账号: admin1  密码: qrmeke4p75</li>\n</ul>\n</li>\n</ul>\n<p>该系统为本人毕业设计，由于时间仓促，部分功能设计不太优雅，请见谅。<br>\n以下截取于部分论文相关内容。</p>\n<h3 id=\"目录\" style=\"position:relative;\"><a href=\"#%E7%9B%AE%E5%BD%95\" aria-label=\"目录 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>目录</h3>\n<ol>\n<li><a href=\"#%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84\">系统架构</a></li>\n<li><a href=\"#%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B\">技术选型</a></li>\n<li><a href=\"#Axios%E6%8B%A6%E6%88%AA%E5%99%A8\">Axios拦截器</a></li>\n<li><a href=\"#Laravel%E7%9B%B8%E5%85%B3\">Laravel相关</a></li>\n<li><a href=\"#%E5%89%8D%E7%AB%AF%E7%95%8C%E9%9D%A2%E6%88%AA%E5%9B%BE\">前端界面截图</a></li>\n</ol>\n<h3 id=\"系统架构\" style=\"position:relative;\"><a href=\"#%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84\" aria-label=\"系统架构 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>系统架构</h3>\n<p><strong>系统功能架构</strong></p>\n<p>系统分为学生系统与教师系统，教师用户在登录页登录后自动跳转到教师系统首页，然后教师可以进行创建考试，创建的过程中可以对考试进行临时保存。把题目与考试班级等考试信息填写完毕后可以进行发布考试。这时学生用户登录到学生系统后，学生主页将会显示自己需要进行的考试列表或自己已经完成的考试列表。学生点击进入考试则可进行考试，在规定时间内完成考试后进行交卷。提交试卷后，将会弹出自动阅卷结果，学生可以进入查看自己的答卷与分数。与此同时，教师系统可获取到学生完成考试的列表，教师可以查看学生的成绩与答卷，并对需要进行阅卷的考试进行阅卷。教师系统提供一个公共功能，教师可以发布、编辑、删除公告，发布的公告将展示在学生系统上。</p>\n<p><img src=\"https://s2.loli.net/2021/12/04/HTLEn4zjxKXiPs5.png\" alt=\"系统功能架构图\"></p>\n<p><strong>系统技术架构</strong></p>\n<p><img src=\"https://s2.loli.net/2021/12/04/z2ZQrXeiCMPuGxt.png\" alt=\"系统技术架构图\"></p>\n<h3 id=\"技术选型\" style=\"position:relative;\"><a href=\"#%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B\" aria-label=\"技术选型 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>技术选型</h3>\n<p>本研究中，总体采用前后端分离的技术进行开发。前端使用近年流行的MVVM框架Vue，同时使用其附属的Vue-router路由管理模块和Vuex状态管理模块。UI将采用Element-ui框架，系统将采用部分响应式布局设计。</p>\n<p>前端使用axios工具，其基于Ajax技术开发，前端可通过它把所有需要的动态数据以JSON格式请求后端，同时获取后端返回到的JSON数据。再将动态数据经过逻辑处理渲染到页面中。</p>\n<p>后端总体采用PHP技术开发，使用PHP的MVC框架Laravel，其具有路由、中间件、查询构造器等功能。本次后端仅作为API服务器，并不会直接使用后端的View视图层。</p>\n<p>数据库方面采用Mysql数据库，基于其能与PHP语言友好结合，运行速度快，提供事务处理功能的特点。同时，关系型数据库，能方便的处理在线考试系统模型关联问题。</p>\n<h3 id=\"axios拦截器\" style=\"position:relative;\"><a href=\"#axios%E6%8B%A6%E6%88%AA%E5%99%A8\" aria-label=\"axios拦截器 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Axios拦截器</h3>\n<p>配置Axios拦截器，可以在请求之前和请求之后作统一处理。每一个后端请求都需要默认传送一个token作为身份认证。所以前端在请求前，可以统一配置这个token，默认为每个请求自动拼上token字段。</p>\n<p>后端每个请求都会返回错误码与请求信息，前端Axios可以对每个响应进行统一处理。例如，字段码为200则说明请求成功，其他字段码均为错误请求，可以为错误请求统一弹出错误信息。</p>\n<p>同时本次用拦截器加入了一个取消重复请求与切换路由自动取消之前路由未完成请求的功能。</p>\n<p><strong>axios.js</strong></p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> baseURL <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'./api'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'./api/api'</span>\n<span class=\"token comment\">// 创建实例</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> instance <span class=\"token operator\">=</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span>  baseURL<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">timeout</span><span class=\"token operator\">:</span> <span class=\"token number\">90000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/json'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> axiosPendingList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 记录请求</span>\n<span class=\"token comment\">// 请求拦截</span>\ninstance<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> mark <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>url\n  <span class=\"token keyword\">let</span> markIndex <span class=\"token operator\">=</span> axiosPendingList<span class=\"token punctuation\">.</span><span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> mark<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>markIndex <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    axiosPendingList<span class=\"token punctuation\">[</span>markIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'重复请求'</span><span class=\"token punctuation\">)</span></span>    axiosPendingList<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>markIndex<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> CancelToken <span class=\"token operator\">=</span> axios<span class=\"token punctuation\">.</span>CancelToken\n  <span class=\"token keyword\">const</span> source <span class=\"token operator\">=</span> CancelToken<span class=\"token punctuation\">.</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  config<span class=\"token punctuation\">.</span>cancelToken <span class=\"token operator\">=</span> source<span class=\"token punctuation\">.</span>token\n  config<span class=\"token punctuation\">.</span>_mark <span class=\"token operator\">=</span> mark\n  axiosPendingList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> mark<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">cancel</span><span class=\"token operator\">:</span> source<span class=\"token punctuation\">.</span>cancel\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> token <span class=\"token operator\">=</span> sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token string\">''</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      config<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>token <span class=\"token operator\">=</span> token\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      config<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n      config<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>token <span class=\"token operator\">=</span> token\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>method <span class=\"token operator\">===</span> <span class=\"token string\">'post'</span> <span class=\"token operator\">&amp;&amp;</span> config<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">[</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    config<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> qs<span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> config\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 响应拦截</span>\ninstance<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> markIndex <span class=\"token operator\">=</span> axiosPendingList<span class=\"token punctuation\">.</span><span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> response<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>_mark<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>markIndex <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      axiosPendingList<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>markIndex<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></span>    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>data\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>code <span class=\"token operator\">===</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">.</span>data\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>code <span class=\"token operator\">===</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">Message</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">showClose</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> <span class=\"token number\">2000</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">Message</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">showClose</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> <span class=\"token number\">2000</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>err<span class=\"token punctuation\">.</span>message <span class=\"token operator\">===</span> <span class=\"token string\">'重复请求'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">Message</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">showClose</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'Api访问失败，请检查网络..'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> <span class=\"token number\">1500</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span>\n  baseURL<span class=\"token punctuation\">,</span>\n  axiosPendingList\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> instance</code></pre></div>\n<p><strong>router.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">...</span>\n<span class=\"token comment\">// 路由守卫拦截，切换路由取消未完成请求</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  axiosPendingList<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>item<span class=\"token punctuation\">.</span>notAllowCancel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      item<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">...</span></code></pre></div>\n<h3 id=\"laravel相关\" style=\"position:relative;\"><a href=\"#laravel%E7%9B%B8%E5%85%B3\" aria-label=\"laravel相关 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Laravel相关</h3>\n<h4 id=\"中间件\" style=\"position:relative;\"><a href=\"#%E4%B8%AD%E9%97%B4%E4%BB%B6\" aria-label=\"中间件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>中间件</h4>\n<p>本项目采用前后端分离方式开发，以Token形式保存当前的用户信息。Token可分为学生Token和教师Token，每一个请求都会带有Token以识别当前的用户。所以我们可以设置一些请求中间件，在每次请求前统一对Token进行处理。\n<strong>CheckToken.php</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token operator\">...</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">CheckToken</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/**\n  * Handle an incoming request.\n  *\n  * @param  \\Illuminate\\Http\\Request  $request\n  * @param  \\Closure  $next\n  * @return mixed\n  */</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Closure</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$token</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$request</span> <span class=\"token operator\">-></span> <span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$now</span> <span class=\"token operator\">=</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Y-m-d H:i:s'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$token_row</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">Token</span><span class=\"token operator\">::</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'='</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$token</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'overdue_after'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'>'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$now</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$token_row</span><span class=\"token operator\">-></span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 更新Token过期时间</span>\n      <span class=\"token variable\">$update_overdue</span> <span class=\"token operator\">=</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Y-m-d H:i:s'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">strtotime</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"+2 hour\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token variable\">$token_row</span><span class=\"token operator\">-></span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'overdue_after'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$update_overdue</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">response</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Response</span><span class=\"token operator\">::</span><span class=\"token function\">loginError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">...</span></code></pre></div>\n<h4 id=\"查询构造器\" style=\"position:relative;\"><a href=\"#%E6%9F%A5%E8%AF%A2%E6%9E%84%E9%80%A0%E5%99%A8\" aria-label=\"查询构造器 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>查询构造器</h4>\n<p>使用Laravel提供的查询构造器功能，能够方便的让我们的SQL语句变得简单，查询数据库数据更加快速。它使用PDO连接方式连接数据库，并且通过封装可以有效的防止SQL注入攻击。</p>\n<p>查询构造器语法什么简洁，并且采用拼接的方式组成。例如：table(‘user’)->get()，它将别转换为select * from user的SQL命令。在可以运行原生SQL的同时，对SQL的所有命令都有对其进行进一层封装，例如条件语句、连接查询、排序、分组、Limit等，同时它扩展了同时多个插入更新、Exists、悲观锁等功能。</p>\n<p>使用查询构造器查询出来的数据记录为Laravel特有的集合类型，Larvel为集合类型封装了很多简便快捷的数据处理方法API，例如map（遍历）、filter（过滤）、diff（比较）、forPage（快速分页）、groupBy（快速分组）等等。</p>\n<h4 id=\"事务处理\" style=\"position:relative;\"><a href=\"#%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86\" aria-label=\"事务处理 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>事务处理</h4>\n<p>Laravel框架对Mysql的事务处理进行了有效方便的封装，可以让我们对数据库进行开启事务处理功能。开启事务，可以有效地防止数据库方式死锁。在本在线考试系统中，教师可以对正在创建的考试进行临时保存，在进行重新编辑并重新保存时，需要先删除当前该试卷已保存的试题记录，然后再插入修改后的试题记录。这时候在删除和插入的过程中，有可能会发生数据库数据未能正常删除，然后插入了相同ID记录，形成数据表错误或发生死锁。所有，我们可以对删除和插入构成同一个事务，只有当删除和插入都没异常时再进行事务提交，若有异常则进行回滚。</p>\n<p>使用DB::beginTransaction()开启事务，然后把所有数据库操作放在一个try模块下，在try模块最后使用DB::commit()进行事务提交，然后catch模块写入回滚代码DB::rollBack()。</p>\n<p>本次研究中，项目中在学生提交考试、教师编辑临时保存考试、教师发布考试、教师编辑班级等模块操作中都有使用相应事务处理功能。</p>\n<h4 id=\"响应体封装\" style=\"position:relative;\"><a href=\"#%E5%93%8D%E5%BA%94%E4%BD%93%E5%B0%81%E8%A3%85\" aria-label=\"响应体封装 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>响应体封装</h4>\n<p><strong>Response.php</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Response</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Model</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string single-quoted-string\">'code'</span> <span class=\"token operator\">=></span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string single-quoted-string\">'message'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'操作成功'</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON_UNESCAPED_UNICODE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">exit</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">successMsg</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string single-quoted-string\">'code'</span> <span class=\"token operator\">=></span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string single-quoted-string\">'message'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$message</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON_UNESCAPED_UNICODE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">exit</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">successData</span><span class=\"token punctuation\">(</span>\n    <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n    <span class=\"token variable\">$message</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'数据获取成功'</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string single-quoted-string\">'code'</span> <span class=\"token operator\">=></span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string single-quoted-string\">'message'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string single-quoted-string\">'data'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$data</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON_UNESCAPED_UNICODE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">exit</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">successPage</span><span class=\"token punctuation\">(</span>\n    <span class=\"token variable\">$items</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n    <span class=\"token variable\">$page</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> \n    <span class=\"token variable\">$pageSize</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> \n    <span class=\"token variable\">$total</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> \n    <span class=\"token variable\">$message</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'数据获取成功'</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string single-quoted-string\">'code'</span> <span class=\"token operator\">=></span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> \n      <span class=\"token string single-quoted-string\">'message'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string single-quoted-string\">'data'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'items'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$items</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'page'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$page</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'pageSize'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$pageSize</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'total'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$total</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON_UNESCAPED_UNICODE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">exit</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">loginError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string single-quoted-string\">'code'</span> <span class=\"token operator\">=></span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string single-quoted-string\">'message'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'登录状态异常'</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON_UNESCAPED_UNICODE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">exit</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">parameterError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string single-quoted-string\">'code'</span> <span class=\"token operator\">=></span> <span class=\"token number\">301</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string single-quoted-string\">'message'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'参数错误'</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON_UNESCAPED_UNICODE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">exit</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">error</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span> <span class=\"token operator\">=</span> <span class=\"token number\">302</span> <span class=\"token punctuation\">,</span> <span class=\"token variable\">$message</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string single-quoted-string\">'code'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$code</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string single-quoted-string\">'message'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$message</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON_UNESCAPED_UNICODE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">exit</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"前端界面截图\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E7%AB%AF%E7%95%8C%E9%9D%A2%E6%88%AA%E5%9B%BE\" aria-label=\"前端界面截图 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前端界面截图</h3>\n<p><strong>登录界面</strong>\n<img src=\"https://s2.loli.net/2021/12/04/fMzSWQCV9YstbXg.jpg\" alt=\"登录界面\"></p>\n<p><strong>创建考试</strong>\n<img src=\"https://s2.loli.net/2021/12/04/l58hipzMxXe7BRf.png\" alt=\"创建考试\"></p>\n<p><strong>成绩管理</strong>\n<img src=\"https://s2.loli.net/2021/12/04/POgNKjoARZ8uyE2.png\" alt=\"成绩管理\"></p>\n<p><strong>考试管理</strong>\n<img src=\"https://s2.loli.net/2021/12/04/STQC3lk1fWurIxa.png\" alt=\"考试管理\"></p>\n<p><strong>考试</strong>\n<img src=\"https://s2.loli.net/2021/12/04/Rn6Ux3F2HMf1mO7.png\" alt=\"考试\"></p>\n<p><strong>考试结果</strong>\n<img src=\"https://s2.loli.net/2021/12/04/rEqdBh2INZWJ4Fz.png\" alt=\"考试结果\"></p>\n<p>由于时间仓促，本次开发的系统虽然基本功能已经完成，但仍有很大的提升空间。</p>\n<p><em>以上内容未经授权请勿随意转载。</em></p>\n<p>系统在线访问：<a href=\"https://kongfandong.cn/exam/index.html\" target=\"_blank\">ExamSystem</a></p>","frontmatter":{"title":"考试系统设计总结","date":"December 01, 2018","description":"采用Vue + Laravel + Mysql 架构开发的在线考试系统，包含学生端与教师管理端功能"}}},"pageContext":{"slug":"/design-of-exam-system/","previous":null,"next":{"fields":{"slug":"/design-of-electricity-system/"},"frontmatter":{"title":"简易电商系统开发记录(Nuxtjs+Koa)"}}}},
    "staticQueryHashes": ["143701507","165057280"]}