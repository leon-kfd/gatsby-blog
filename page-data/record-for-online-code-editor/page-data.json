{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/record-for-online-code-editor/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Howdy"}},"markdownRemark":{"id":"3a2c2d32-b3a1-51cf-b4ef-4cef72cace15","excerpt":"OnlineCodeEditor是笔者基于Vue3 + Typescript开发的一个类似的开源项目，本文记录一些项目中使用到技术及实现原理等。 🏹Github 🌈Simple Demo from Github pages 🎉Simple Demo from author server Feature…","html":"<p>OnlineCodeEditor是笔者基于Vue3 + Typescript开发的一个类似<code class=\"language-text\">Codepen</code>的开源项目，本文记录一些项目中使用到技术及实现原理等。</p>\n<ul>\n<li><a href=\"https://github.com/leon-kfd/OnlineCodeEditor/\" target=\"_blank\">🏹Github</a></li>\n<li><a href=\"https://leon-kfd.github.io/OnlineCodeEditor/#/\" target=\"_blank\">🌈Simple Demo from Github pages</a></li>\n<li><a href=\"https://kongfandong.cn/coder/\" target=\"_blank\">🎉Simple Demo from author server</a></li>\n</ul>\n<h2 id=\"feature\" style=\"position:relative;\"><a href=\"#feature\" aria-label=\"feature permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Feature</h2>\n<p>✅ 纯前端项目静态部署（利用iframe与<code class=\"language-text\">postMessage</code>生成实时预览子页）</p>\n<p>✅ 响应式布局，布局可弹性伸缩支持拖拽更改宽度、折叠。</p>\n<p>✅ HTML/CSS <a href=\"https://docs.emmet.io/\" target=\"_blank\"><code class=\"language-text\">Emmet</code></a>技术，按<code class=\"language-text\">Tab</code>键快速生成代码</p>\n<p>✅ 支持引入外部CDN样式和JS.</p>\n<p>✅ 增加<code class=\"language-text\">SCSS</code>解析模块. (基于在线转换API：<a href=\"https://sassmeister.com\" target=\"_blank\">sassmeister.com</a>)</p>\n<h2 id=\"主要原理\" style=\"position:relative;\"><a href=\"#%E4%B8%BB%E8%A6%81%E5%8E%9F%E7%90%86\" aria-label=\"主要原理 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>主要原理</h2>\n<p>使用<code class=\"language-text\">codemirror</code>搭建HTML、CSS、JS三种代码块编译器，构建一个Iframe网页用于展示效果。然后利用<code class=\"language-text\">Postmessage</code>向Iframe传入代码数据并替换旧代码。同时支持传入jsCDN与CssCDN路径，也是利用新增或更新动态标签实现。注意为了防止一直更改dom浪费内存，我们可以使用<code class=\"language-text\">debounce</code>防抖等让其在代码停止编辑一定时间才进行刷新。</p>\n<p>通过简单的改写html/css/js实现不刷新页面更新页面效果。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">loadPage</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">htmlCode<span class=\"token punctuation\">,</span> cssCode<span class=\"token punctuation\">,</span> jsCode</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> _html <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#customHTML'</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_html<span class=\"token punctuation\">)</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>_html<span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">const</span> html <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span>\r\n  html<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> <span class=\"token string\">'customHTML'</span>\r\n  html<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> htmlCode\r\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span>\r\n\r\n  <span class=\"token keyword\">const</span> _css <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#customCSS'</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_css<span class=\"token punctuation\">)</span> document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>_css<span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">const</span> css <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">)</span>\r\n  css<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> <span class=\"token string\">'customCSS'</span>\r\n  css<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> cssCode\r\n  document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>css<span class=\"token punctuation\">)</span>\r\n\r\n  <span class=\"token keyword\">const</span> _script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#customJS'</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_script<span class=\"token punctuation\">)</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>_script<span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">const</span> script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span>\r\n  script<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> <span class=\"token string\">'customJS'</span>\r\n  script<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> jsCode\r\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>当然有一些场景是需要手动刷新页面的，例如：添加JS监听器、更新CDN路径等。这时为iframe更新时间戳，就可以实现页面刷新。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">refresh <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>refresh<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    state<span class=\"token punctuation\">.</span>iframeURL<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./iframe.html?t=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token operator\">+</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\r\n    <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token operator\">...</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"emmet\" style=\"position:relative;\"><a href=\"#emmet\" aria-label=\"emmet permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Emmet</h2>\n<p><code class=\"language-text\">emmet</code>技术，可以让开发者速写html代码。官方文档参考：<a href=\"https://docs.emmet.io/\" target=\"_blank\"><a href=\"https://docs.emmet.io/\">https://docs.emmet.io/</a></a></p>\n<p>emmet有提供npm包，可以让我们在浏览器中使用其API。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> expand <span class=\"token keyword\">from</span> <span class=\"token string\">'emmet'</span>\r\n<span class=\"token comment\">// 传入word与模式即可获取到速写后的代码</span>\r\n<span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">expand</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> mode <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> </code></pre></div>\n<p>同时需要注意，在编写代码时，我们需要提取出速写前的单词，我们可以以空格为界限进行切割，可参考以下函数</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">getWord</span> <span class=\"token punctuation\">(</span>line<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> ch<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> getNearTagChar <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>str<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">'>'</span> <span class=\"token operator\">||</span> str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">'&lt;'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">return</span> str<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token string\">'&lt;'</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token comment\">// 光标位于行末或单词末尾</span>\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ch <span class=\"token operator\">===</span> line<span class=\"token punctuation\">.</span>length <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> ch <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\s</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">[</span>ch<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> line<span class=\"token punctuation\">[</span>ch<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">'&lt;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">let</span> i\r\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> ch <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\s</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">'>'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">getNearTagChar</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'&lt;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">break</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>line<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> ch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>当我们输入完关键词后，按<code class=\"language-text\">Tab</code>键时可快速匹配到相应代码块，当前支持<code class=\"language-text\">html</code>与<code class=\"language-text\">css</code>的速写。</p>\n<p><img src=\"https://s2.loli.net/2021/12/04/3atBIHZYMW6fJyx.gif\" alt=\"emmet.gif\"></p>\n<h2 id=\"支持编写sass代码\" style=\"position:relative;\"><a href=\"#%E6%94%AF%E6%8C%81%E7%BC%96%E5%86%99sass%E4%BB%A3%E7%A0%81\" aria-label=\"支持编写sass代码 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>支持编写SASS代码</h2>\n<p>项目中支持切换到SCSS预编译器编写CSS。</p>\n<p>由于SASS是一般基于<code class=\"language-text\">node-sass</code>或<code class=\"language-text\">dart-sass</code>，这两个可以通过某些技术让其在浏览器中运行，但是占用的文件大小会较大，所以此次仅采用了线上API实现。</p>\n<p>线上SASS转CSS地址: <a href=\"https://sassmeister.com\" target=\"_blank\">sassmeister.com</a></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">scss2css</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">scss</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://api.sassmeister.com/compile'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">input</span><span class=\"token operator\">:</span> scss<span class=\"token punctuation\">,</span>\r\n        <span class=\"token literal-property property\">outputStyle</span><span class=\"token operator\">:</span> <span class=\"token string\">'expanded'</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token literal-property property\">syntax</span><span class=\"token operator\">:</span> <span class=\"token string\">'SCSS'</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token literal-property property\">compiler</span><span class=\"token operator\">:</span> <span class=\"token string\">'dart-sass/1.26.11'</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token string-property property\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/json'</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"webpack配置相关\" style=\"position:relative;\"><a href=\"#webpack%E9%85%8D%E7%BD%AE%E7%9B%B8%E5%85%B3\" aria-label=\"webpack配置相关 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Webpack配置相关</h2>\n<ul>\n<li>由于生成iframe页，项目变成了多页面应用，需要设置2个入口</li>\n<li>定义全局配色scss变量，为了减去手动引入，使用css-loader时采用了全局注入的方式</li>\n<li>配置CDN路径减轻网站带宽压力（但由于codemirror内部结构问题，这次只将css文件放在了CDN）</li>\n</ul>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// vue.config.js</span>\r\n<span class=\"token keyword\">const</span> isProduction <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span>\r\n<span class=\"token keyword\">const</span> assetsCDN <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">css</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\r\n    <span class=\"token string\">'https://cdn.bootcdn.net/ajax/libs/codemirror/5.58.1/codemirror.min.css'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">'https://cdn.bootcdn.net/ajax/libs/codemirror/5.58.1/theme/material-darker.min.css'</span>\r\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">js</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">const</span> isHashMode <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">VUE_APP_ROUTER_MODE</span> <span class=\"token operator\">===</span> <span class=\"token string\">'hash'</span>\r\n<span class=\"token keyword\">const</span> publicPath <span class=\"token operator\">=</span> isHashMode <span class=\"token operator\">?</span> <span class=\"token string\">'./'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'/coder'</span>\r\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token literal-property property\">pages</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token literal-property property\">index</span><span class=\"token operator\">:</span> <span class=\"token string\">'src/main.ts'</span><span class=\"token punctuation\">,</span>\r</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token literal-property property\">iframe</span><span class=\"token operator\">:</span> <span class=\"token string\">'src/iframe.ts'</span>\r</span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token function-variable function\">chainWebpack</span><span class=\"token operator\">:</span> <span class=\"token parameter\">config</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    config<span class=\"token punctuation\">.</span><span class=\"token function\">plugin</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html-index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">tap</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">args</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n      args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>cdn <span class=\"token operator\">=</span> assetsCDN\r\n      <span class=\"token keyword\">return</span> args\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">css</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">loaderOptions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token literal-property property\">scss</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token literal-property property\">prependData</span><span class=\"token operator\">:</span> <span class=\"token string\">'@import \"~@/assets/variable.scss\";'</span>\r</span>      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">productionSourceMap</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span>isProduction<span class=\"token punctuation\">,</span>\r\n  publicPath\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"兼容手机模式响应式设计\" style=\"position:relative;\"><a href=\"#%E5%85%BC%E5%AE%B9%E6%89%8B%E6%9C%BA%E6%A8%A1%E5%BC%8F%E5%93%8D%E5%BA%94%E5%BC%8F%E8%AE%BE%E8%AE%A1\" aria-label=\"兼容手机模式响应式设计 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>兼容手机模式（响应式设计)</h2>\n<p>项目中代码编辑器布局在PC端中支持自定义拉伸与折叠，使用了笔者开源插件<code class=\"language-text\">@howdyjs/resize</code>。</p>\n<p>实现响应式设计一般采用CSS3的媒体查询实现，但由于布局问题，手机端下不适用拉伸布局，需要额外添加一个手机端下的标签页，所以这次需要使用js辅助实现。</p>\n<p><img src=\"https://s2.loli.net/2021/12/04/jFqzUH3udXWkM2i.gif\" alt=\"响应式\"></p>\n<h2 id=\"利用github-workflows实现自动构建\" style=\"position:relative;\"><a href=\"#%E5%88%A9%E7%94%A8github-workflows%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA\" aria-label=\"利用github workflows实现自动构建 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>利用Github Workflows实现自动构建</h2>\n<p>由于该项目是纯前端项目，打包后直接部署就行，所以很适合使用github page部署。</p>\n<p>使用Github workflows可以构建任务，让其在代码push时自动执行打包，并部署到github page分支。</p>\n<p>目前已经社区已经有很多成熟的常用任务，不需要自己编写。这次主要用到了<code class=\"language-text\">github-pages-deploy-action</code>可以直接帮我们把代码发布到github page分支。</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token comment\"># .github/workflows/main.deploy.yml</span>\r\n<span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy Doc Website\r\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\r\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\r\n      <span class=\"token punctuation\">-</span> main\r\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\r\n  <span class=\"token key atrule\">main-deploy</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\r\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\r\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout\r\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\r\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\r\n          <span class=\"token key atrule\">persist-credentials</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\r\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup node\r\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v2\r\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install dependencies\r\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> yarn\r\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build Demo\r\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> yarn build<span class=\"token punctuation\">:</span>hash\r\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\r\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> JamesIves/github<span class=\"token punctuation\">-</span>pages<span class=\"token punctuation\">-</span>deploy<span class=\"token punctuation\">-</span>action@3.7.1\r\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\r\n          <span class=\"token key atrule\">GITHUB_TOKEN</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.GITHUB_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\r\n          <span class=\"token key atrule\">BRANCH</span><span class=\"token punctuation\">:</span> gh<span class=\"token punctuation\">-</span>pages\r\n          <span class=\"token key atrule\">FOLDER</span><span class=\"token punctuation\">:</span> dist\r\n</code></pre></div>\n<blockquote>\n<p>需要注意github page目前不支持<code class=\"language-text\">history</code>的路由模式</p>\n</blockquote>\n<h2 id=\"todo\" style=\"position:relative;\"><a href=\"#todo\" aria-label=\"todo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Todo</h2>\n<p>😴 Javascript Babel模式<br>\n😴 引入账号系统同步代码<br>\n😴 线上代码展示模式</p>","frontmatter":{"title":"开发OnlineCodeEditor过程的一些记录","date":"March 20, 2021","description":"OnlineCodeEditor是笔者基于Vue3 + Typescript开发的一个类似Codepen的练手开源项目，本文记录一些项目中使用到技术及实现原理等。"}}},"pageContext":{"slug":"/record-for-online-code-editor/","previous":{"fields":{"slug":"/design-of-howdy-next/"},"frontmatter":{"title":"Howdyjs组件库迁移Vue3设计与总结"}},"next":{"fields":{"slug":"/design-of-dashboard/"},"frontmatter":{"title":"Dashboard自定义面板项目介绍"}}}},
    "staticQueryHashes": ["143701507","165057280"]}