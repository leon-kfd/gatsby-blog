{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/vite-pratice-todolist/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Howdy"}},"markdownRemark":{"id":"18567936-b94a-54d6-9922-421aca2f54d3","excerpt":"Git仓库: https://github.com/leon-kfd/TodoListVitePratice 在线Demo: https://kongfandong.cn/todo Vite Vite is an opinionated web dev build tool that serves your code…","html":"<p>Git仓库: <a href=\"https://github.com/leon-kfd/TodoListVitePratice\" target=\"_blank\" style=\"display:inline-block\"><a href=\"https://github.com/leon-kfd/TodoListVitePratice\">https://github.com/leon-kfd/TodoListVitePratice</a></a></p>\n<p>在线Demo: <a href=\"https://kongfandong.cn/todo\" target=\"_blank\" style=\"display:inline-block\"><a href=\"https://kongfandong.cn/todo\">https://kongfandong.cn/todo</a></a></p>\n<h2 id=\"vite\" style=\"position:relative;\"><a href=\"#vite\" aria-label=\"vite permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vite</h2>\n<blockquote>\n<p>Vite is an opinionated web dev build tool that serves your code via native ES Module imports during dev and bundles it with Rollup for production.</p>\n</blockquote>\n<p>目前，Vue-cli还未能直接搭建vue3应用，需要在vue2的项目上通过执行<code class=\"language-text\">vue add next</code>命令进行升级。</p>\n<p>而Vite是官方提供的一个可以快速搭建vue3新工具，它是一个简易的http服务器，无需通过webpack打包即可实时解析vue3文件，并能实现热更新。</p>\n<p>现在最新版的vite已经提供了一个简易模板，可以直接使用一下命令快速搭建</p>\n<h3 id=\"安装与启动\" style=\"position:relative;\"><a href=\"#%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%AF%E5%8A%A8\" aria-label=\"安装与启动 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安装与启动</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ npx create-vite-app <span class=\"token operator\">&lt;</span>project-name<span class=\"token operator\">></span>\n$ <span class=\"token builtin class-name\">cd</span> <span class=\"token operator\">&lt;</span>project-name<span class=\"token operator\">></span>\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span>\n$ <span class=\"token function\">npm</span> run dev</code></pre></div>\n<p>具体参考官方仓库: <a href=\"https://github.com/vuejs/vite#getting-started\" target=\"_blank\"><a href=\"https://github.com/vuejs/vite#getting-started\">https://github.com/vuejs/vite#getting-started</a></a></p>\n<h3 id=\"typescript\" style=\"position:relative;\"><a href=\"#typescript\" aria-label=\"typescript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Typescript</h3>\n<p>vite最新版默认已经可以直接对typescript进行解析编译，直接在vue文件中的<code class=\"language-text\">script</code>标签下加入<code class=\"language-text\">lang=\"ts\"</code>即可。</p>\n<h3 id=\"sass\" style=\"position:relative;\"><a href=\"#sass\" aria-label=\"sass permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sass</h3>\n<p>执行命令安装sass， <code class=\"language-text\">npm i sass -D</code>， 然后在vue文件的<code class=\"language-text\">style</code>标签下加入<code class=\"language-text\">lang=\"scss\"</code>即可，这些与以前vue2都是一样的。</p>\n<h3 id=\"vuex\" style=\"position:relative;\"><a href=\"#vuex\" aria-label=\"vuex permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vuex</h3>\n<p>支持vue3的vuex最新版现在还未正式发版，需要使用<code class=\"language-text\">npm i vuex@next -D</code>来安装。<br>\nVuex的新语法进行了一些变更，你需要使用Vuex.createStore来创建，其他语法没有区别。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Vuex <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span>\n<span class=\"token comment\">// or => import { createStore } from 'vuex'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Vuex<span class=\"token punctuation\">.</span><span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  mutations<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  actions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  modules<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>然后在main.js引入这个文件并use</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createApp <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App.vue'</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> store <span class=\"token keyword\">from</span> <span class=\"token string\">'./store/index.js'</span></span><span class=\"token keyword\">import</span> <span class=\"token string\">'./assets/base.css'</span>\n<span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"vue-compostion-api\" style=\"position:relative;\"><a href=\"#vue-compostion-api\" aria-label=\"vue compostion api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue Compostion Api</h2>\n<p>Vue3最大的一个变化就是使用<code class=\"language-text\">Vue Compostion Api</code>， 现在官方已经提供了 <strong><a href=\"https://vue-composition-api-rfc.netlify.app/zh/api.html#setup\">中文文档</a></strong></p>\n<p>本次只用到了其中很少一部分的API，而且可能使用方式不一定准确，仅供参考，望见谅。</p>\n<h2 id=\"功能设计\" style=\"position:relative;\"><a href=\"#%E5%8A%9F%E8%83%BD%E8%AE%BE%E8%AE%A1\" aria-label=\"功能设计 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>功能设计</h2>\n<ul>\n<li>对TodoList的操作：完成、取消、添加、删除</li>\n<li>可记录不同日期的TodoList</li>\n<li>对记录了TodoList的日期进行标注</li>\n</ul>\n<p>现在先来看一下最终项目DEMO成果</p>\n<iframe src=\"https://kongfandong.cn/todo\" width=\"100%\" height=\"670px\" style=\"border: none;outline:none;box-shadow: 0 0 5px #888\"></iframe>\n<p>点击头部的日期会弹出日期选择，可选择其他日期。</p>\n<h2 id=\"实现\" style=\"position:relative;\"><a href=\"#%E5%AE%9E%E7%8E%B0\" aria-label=\"实现 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实现</h2>\n<p>主要组件<code class=\"language-text\">Card.vue</code>组件，然后里面包含一个日期选择组件<code class=\"language-text\">DatePicker.vue</code>\n为了练习一下vuex在vue3的使用，将当前的选择日期记录在了vuex中。</p>\n<p>主要逻辑代码</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Card.vue</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ref<span class=\"token punctuation\">,</span> reactive<span class=\"token punctuation\">,</span> computed<span class=\"token punctuation\">,</span> watch <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useStore <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Todo<span class=\"token punctuation\">,</span> getTodoList<span class=\"token punctuation\">,</span> setTodoList <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../model/todo'</span>\n<span class=\"token keyword\">import</span> DatePicker <span class=\"token keyword\">from</span> <span class=\"token string\">'./DatePicker.vue'</span>\n<span class=\"token keyword\">const</span> weekArr<span class=\"token operator\">:</span> string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'Sunday'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Monday'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Tuesday'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Wednesday'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Thursday'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Firday'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Saturday'</span>\n<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Card'</span><span class=\"token punctuation\">,</span>\n  components<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    DatePicker\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  directives<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      el<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    date<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n    showAddBtn<span class=\"token operator\">:</span> Boolean\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">useStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      editingValue<span class=\"token operator\">:</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      showDatePicker<span class=\"token operator\">:</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">let</span> todoList <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">,</span>\n      <span class=\"token parameter\">val</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        todoList<span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        todoList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token function\">getTodoList</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// state.showDatePicker.value = false</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        immediate<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> weekDay <span class=\"token operator\">=</span> <span class=\"token function\">computed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> weekArr<span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> formatterDate <span class=\"token operator\">=</span> <span class=\"token function\">computed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token parameter\">string</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> arr<span class=\"token operator\">:</span> string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toDateString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> handleChecked <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> Todo<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token parameter\"><span class=\"token keyword\">void</span></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      item<span class=\"token punctuation\">.</span>isChecked <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>item<span class=\"token punctuation\">.</span>isChecked\n      <span class=\"token function\">setTodoList</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">,</span> todoList<span class=\"token punctuation\">)</span>\n      store<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'refreshTodoListDateArr'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> handleRemove <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>index<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token parameter\"><span class=\"token keyword\">void</span></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      todoList<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n      <span class=\"token function\">setTodoList</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">,</span> todoList<span class=\"token punctuation\">)</span>\n      store<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'refreshTodoListDateArr'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> handleAdd <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token parameter\"><span class=\"token keyword\">void</span></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      state<span class=\"token punctuation\">.</span>editingValue<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n      todoList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        content<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n        isChecked<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        isEditing<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> handleEditSubmit <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> Todo<span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token parameter\"><span class=\"token keyword\">void</span></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>isEditing<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">.</span>editingValue<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          item<span class=\"token punctuation\">.</span>content <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>editingValue<span class=\"token punctuation\">.</span>value\n          item<span class=\"token punctuation\">.</span>isEditing <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          todoList<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">setTodoList</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">,</span> todoList<span class=\"token punctuation\">)</span>\n        store<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'refreshTodoListDateArr'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      weekDay<span class=\"token punctuation\">,</span>\n      formatterDate<span class=\"token punctuation\">,</span>\n      todoList<span class=\"token punctuation\">,</span>\n      handleChecked<span class=\"token punctuation\">,</span>\n      handleRemove<span class=\"token punctuation\">,</span>\n      handleAdd<span class=\"token punctuation\">,</span>\n      handleEditSubmit<span class=\"token punctuation\">,</span>\n      <span class=\"token operator\">...</span>state\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>组件功能实现都比较简单，本次只为了熟悉语法，所以具体代码逻辑在这就不进行讲解了。</p>\n<h2 id=\"项目打包\" style=\"position:relative;\"><a href=\"#%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85\" aria-label=\"项目打包 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>项目打包</h2>\n<p>使用<code class=\"language-text\">npm run build</code>或者<code class=\"language-text\">npx vite build</code>即可打包项目。</p>\n<blockquote>\n<p>Vite的打包基于Rollup</p>\n</blockquote>\n<p>需要注意的是，vite也是想vue-cli那样提供了配置文件的，在根目录下添加<code class=\"language-text\">vite.config.js</code>即可，例如本地打包后项目是通过 <strong><a href=\"https://kongfandong.cn/todo\">https://kongfandong.cn/todo</a></strong> 来访问的，如果使用默认的打包配置，会出现资源404的问题。这时需要给打包配置资源路径<code class=\"language-text\">/todo</code>，加入以下配置：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// vite.config.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  base<span class=\"token operator\">:</span> <span class=\"token string\">'/todo'</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Vite还提供了很多其他的配置，具体请参考: <a href=\"https://github.com/vuejs/vite/blob/master/src/node/config.ts\" target=\"_blank\"><a href=\"https://github.com/vuejs/vite/blob/master/src/node/config.ts\">https://github.com/vuejs/vite/blob/master/src/node/config.ts</a></a></p>\n<h2 id=\"一个插曲\" style=\"position:relative;\"><a href=\"#%E4%B8%80%E4%B8%AA%E6%8F%92%E6%9B%B2\" aria-label=\"一个插曲 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>一个插曲</h2>\n<p>一开始，我使用vuex是使用<code class=\"language-text\">getCurrentInstance</code>获取vue的实例想像vue2那样类似<code class=\"language-text\">this.$store.state</code>来使用vuex的，就像下面的代码</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> computed<span class=\"token punctuation\">,</span> getCurrentInstance <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setup</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> ctx <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">getCuurentInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> selectedDate <span class=\"token operator\">=</span> <span class=\"token function\">computed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ctx<span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>selectedDate<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      selectedDate\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这样ts会报错，提示ctx的类型没找到，通过查源码发现vue并没有把ctx的类型抛出。然后我就改成了</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> computed<span class=\"token punctuation\">,</span> getCurrentInstance <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setup</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> instance<span class=\"token operator\">:</span>any <span class=\"token operator\">=</span> <span class=\"token function\">getCuurentInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> instance<span class=\"token punctuation\">.</span>ctx\n    <span class=\"token keyword\">const</span> selectedDate <span class=\"token operator\">=</span> <span class=\"token function\">computed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ctx<span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>selectedDate<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      selectedDate\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>然后一切如愿进行，开发环境下什么问题也没有了。但是，到了打包之后运行，浏览器就报错了</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">index.js:9 Uncaught TypeError: Cannot read property 'state' of undefined\n    at index.js:9\n    at n (index.js:1)\n    at Object.get value [as value] (index.js:1)\n    at Object.get (index.js:1)\n    at Object.get (index.js:1)\n    at index.js:9\n    at Vn (index.js:1)\n    at Proxy.&lt;anonymous> (index.js:9)\n    at Proxy.&lt;anonymous> (index.js:1)\n    at nt (index.js:1)\n(anonymous) @ index.js:9\n...</code></pre></div>\n<p>报错state没找到，程序上的vuex的$store是undefined。然后我查了好久也没找到解决办法，于是只能在github上提个issue。</p>\n<p>最后得到了解答，<strong>原来在<code class=\"language-text\">setup()</code>中是不能使用<code class=\"language-text\">getCurrentInstance</code>的!</strong></p>\n<p>具体Issue: <a href=\"https://github.com/vuejs/vite/issues/156\" target=\"_blank\"><a href=\"https://github.com/vuejs/vite/issues/156\">https://github.com/vuejs/vite/issues/156</a></a></p>\n<p>最终的解决办法，引入vuex的useStore方法，就可以在setup中使用vuex了。</p>\n<p>最后代码改为:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> computed <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useStore <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setup</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">useStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> selectedDate <span class=\"token operator\">=</span> <span class=\"token function\">computed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ctx<span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>selectedDate<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      selectedDate\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"总结\" style=\"position:relative;\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-label=\"总结 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h2>\n<p>这个小Demo的实现过来还是遇到了不少问题，但还是一一解决了，可以让我对vue3与typescript进行了初步的了解。目前只是因为还不太熟悉，但感觉vue3未来发展潜力还是很大的。</p>\n<p>还有Vite这个工具好像也是很强大的，目测Vue3官方后面有可能会直接推荐使用该工具进行开发了，有可能会放弃的Webpack了。</p>","frontmatter":{"title":"Vue3上手: 使用vite实现一个简单的todolist应用","date":"May 16, 2020","description":"用Vue3的CompositionApi实现一个简单的todolist应用，使用vite搭建，其中结合了vuex、typescript、sass在vue3应用中的简单使用"}}},"pageContext":{"slug":"/vite-pratice-todolist/","previous":{"fields":{"slug":"/design-of-file-system/"},"frontmatter":{"title":"断点续传与个人网盘系统的前后端设计"}},"next":{"fields":{"slug":"/design-of-weapp-file-system/"},"frontmatter":{"title":"使用Taro-next将个人网盘功能扩展到微信小程序"}}}},
    "staticQueryHashes": ["143701507","165057280"]}